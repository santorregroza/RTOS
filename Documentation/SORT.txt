=============================================================================
List of generated methods in project: SORT

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "Led"       (component BitIO)
   - Led_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - Led_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory or a 
                register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - Led_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.
   - Led_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the 
                direction = _[output]_ or _[input/output]_.
   - Led_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.

Module "Timer"     (component TimerInt)
   - Timer_Enable -This method enables the component - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - Timer_Disable -This method disables the component - it stops the timer. No events will be generated.

Module "LED1"      (component BitIO)
   - LED1_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - LED1_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory or 
                a register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED1_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.
   - LED1_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the 
                direction = _[output]_ or _[input/output]_.
   - LED1_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "SeriaAsincrono" (component AsynchroSerial)
   - SeriaAsincrono_Enable -Enables the component - it starts the send and receive functions. Events may be generated 
                ("DisableEvent"/"EnableEvent").
   - SeriaAsincrono_Disable -Disables the component - it stops the send and receive functions. No events will be generated.
   - SeriaAsincrono_RecvChar -If any data is received, this method returns one character, otherwise it returns an error code 
                (it does not wait for data). This method is enabled only if the receiver property is enabled.  [Note:] Because 
                the preferred method to handle error and break exception in the interrupt mode is to use events <OnError> and 
                <OnBreak> the return value ERR_RXEMPTY has higher priority than other error codes. As a consequence the 
                information about an exception in interrupt mode is returned only if there is a valid character ready to be 
                read.
   - SeriaAsincrono_SendChar -Sends one character to the channel. If the component is temporarily disabled (Disable method) 
                SendChar method only stores data into an output buffer. In case of a zero output buffer size, only one 
                character can be stored. Enabling the component (Enable method) starts the transmission of the stored data. 
                This method is available only if the transmitter property is enabled.
   - SeriaAsincrono_GetCharsInRxBuf -Returns the number of characters in the input buffer. This method is available only if the 
                receiver property is enabled.
   - SeriaAsincrono_GetCharsInTxBuf -Returns the number of characters in the output buffer. This method is available only if 
                the transmitter property is enabled.

Module "Motor1"    (component BitsIO)
   - Motor1_GetVal -Returns the value of the Input/Output component. If the direction is [input] then reads the input value of 
                the pins and returns it. If the direction is [output] then returns the last written value (see <Safe mode> 
                property for limitations).
   - Motor1_PutVal -Specified value is passed to the Input/Output component. If the direction is [input] saves the value to a 
                memory or a register, this value will be written to the pins after switching to the output mode - using 
                [SetDir(TRUE)] (see <Safe mode> property for limitations). If the direction is [output] it writes the value to 
                the pins. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - Motor1_GetBit -Returns the value of the specified bit/pin of the Input/Output component. If the direction is [input] then 
                it reads the input value of the pin and returns it. If the direction is [output] then it returns the last 
                written value (see <Safe mode> property for limitations).
   - Motor1_PutBit -Specified value is passed to the specified bit/pin of the Input/Output component. If the direction is 
                [input] it saves the value to a memory or register, this value will be written to the pin after switching to 
                the output mode - using [SetDir(TRUE)] (see <Safe mode> property for limitations). If the direction is [output] 
                it writes the value to the pin. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - Motor1_SetBit -Sets (to one) the specified bit of the Input/Output component. It is the same as [PutBit(Bit, TRUE)]. 
                (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - Motor1_ClrBit -Clears (sets to zero) the specified bit of the Input/Output component. It is the same as [PutBit(Bit, FALSE)
                ]. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - Motor1_NegBit -Negates (inverts) the specified bit of the Input/Output component. It is the same as [PutBit(Bit,!
                GetBit(Bit))]. (Method is available only if the Direction = _[output]_ or _[input/output]_).

Module "SM1"       (component SynchroMaster)
   - SM1_RecvChar -If any data is received, this method returns one character, otherwise it returns an error code (it does not 
                wait for data).   For information about SW overrun behavior please see <General info page>.
   - SM1_SendChar -Sends one character to the channel.
   - SM1_GetCharsInRxBuf -Returns the number of characters in the input buffer.  Note: If the Interrupt service is disabled, 
                and the Ignore empty character is set to yes, and a character has been received, then this method returns 1 
                although it was an empty character.
   - SM1_GetCharsInTxBuf -Returns the number of characters in the output buffer.
   - SM1_GetError -Returns a set of errors on the channel (errors that cannot be returned in given methods). The component 
                accumulates errors in a set; after calling [GetError] this set is returned and cleared. This method is 
                available only if the "Interrupt service/event" property is enabled.

Module "Cpu"       (component MC9S08QE128_80)
   - Cpu_EnableInt -Enables maskable interrupts
   - Cpu_DisableInt -Disables maskable interrupts
   - Cpu_Delay100US -This method realizes software delay. The length of delay is at least 100 microsecond multiply input 
                parameter [us100]. As the delay implementation is not based on real clock, the delay time may be increased by 
                interrupt service routines processed during the delay. The method is independent on selected speed mode.

===================================================================================
